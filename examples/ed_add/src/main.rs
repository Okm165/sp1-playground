#![no_main]

extern crate succinct_zkvm;

succinct_zkvm::entrypoint!(main);

extern "C" {
    fn syscall_ed_add(p: *mut u32, q: *const u32);
}

// let p_ptr = self.bytes.as_mut_ptr() as *mut u32;
// let q_ptr = other.bytes.as_ptr() as *const u32;

fn double(p: &mut [u8; 64]) {
    let p_ptr = p.as_mut_ptr() as *mut u32;

    unsafe {
        syscall_ed_add(p_ptr, p_ptr);
    }
}

pub fn main() {
    // 51678111303152084913827454314362634848811709223999083107998389240572818201492
    // 81193120393662351464882744563215022697608041148797153958502165520382500573671
    let mut a: [u8; 64] = [
        190, 3, 141, 164, 102, 21, 145, 54, 54, 102, 103, 241, 187, 24, 165, 34, 118, 145, 5, 188,
        245, 191, 218, 185, 92, 154, 144, 32, 70, 254, 75, 39, 236, 23, 43, 147, 173, 94, 86, 59,
        244, 147, 44, 112, 225, 36, 80, 52, 195, 84, 103, 239, 46, 253, 77, 100, 235, 248, 25, 104,
        52, 103, 226, 63,
    ];

    println!("a = {:?}", a);
    for _ in 0..256 {
        double(&mut a);
    }
    println!("a = {:?}", a);

    let mut b: [u8; 64] = [
        26, 213, 37, 143, 96, 45, 86, 201, 178, 167, 37, 149, 96, 199, 44, 105, 92, 220, 214, 253,
        49, 226, 164, 192, 254, 83, 110, 205, 211, 54, 105, 33, 88, 102, 102, 102, 102, 102, 102,
        102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
        102, 102, 102, 102, 102, 102, 102,
    ];

    println!("b = {:?}", b);
    for _ in 0..256 {
        double(&mut b);
    }
    println!("b = {:?}", b);

    // // 62399465696052638071651378729512710280386619132715475375856693074117468047896
    // // 187322743848671709334577136883949312458793860615306657012301500666294143998
    // let b: [u8; 64] = [
    //     26, 213, 37, 143, 96, 45, 86, 201, 178, 167, 37, 149, 96, 199, 44, 105, 92, 220, 214, 253,
    //     49, 226, 164, 192, 254, 83, 110, 205, 211, 54, 105, 33, 88, 102, 102, 102, 102, 102, 102,
    //     102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
    //     102, 102, 102, 102, 102, 102, 102,
    // ];

    // // 6060926237032566929030381995842085007931258998602507947154030283577316856220
    // // 11437145884319792702195925812087199909600667374628393344597438256671183927771:
    // let c: [u8; 64] = [
    //     49, 144, 129, 197, 86, 163, 62, 48, 222, 208, 213, 200, 219, 90, 163, 54, 211, 248, 178,
    //     224, 238, 167, 235, 219, 251, 247, 189, 239, 194, 16, 16, 80, 19, 106, 20, 198, 72, 56,
    //     103, 111, 68, 201, 29, 107, 75, 208, 193, 232, 181, 186, 175, 22, 213, 187, 253, 125, 44,
    //     80, 222, 209, 159, 125, 202, 37,
    // ];

    // let mut sum = a;

    // let p_ptr = sum.as_mut_ptr() as *mut u32;
    // let q_ptr = b.as_ptr() as *const u32;
    // let a_ptr = a.as_ptr() as *const u32;
    // // let q_ptr = copy.as_ptr() as *const u32;

    // println!("p_ptr = {:p}", p_ptr);
    // println!("a_ptr = {:p}", a_ptr);

    // unsafe {
    //     syscall_ed_add(p_ptr, q_ptr);
    // }

    // assert_eq!(sum, c);

    // unsafe {
    //     syscall_ed_add(p_ptr, q_ptr);
    //     syscall_ed_add(p_ptr, q_ptr);
    //     syscall_ed_add(p_ptr, q_ptr);
    //     syscall_ed_add(p_ptr, q_ptr);
    //     syscall_ed_add(p_ptr, q_ptr);
    //     syscall_ed_add(p_ptr, q_ptr);
    //     syscall_ed_add(p_ptr, q_ptr);
    // }

    // println!("sum = {:?}", sum);
}
