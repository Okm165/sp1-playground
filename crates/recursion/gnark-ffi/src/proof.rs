use serde::{Deserialize, Serialize};

/// Enum representing different types of zero-knowledge proofs.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum ProofBn254 {
    /// PLONK proof generated using the PLONK protocol.
    Plonk(PlonkBn254Proof),
    /// Groth16 proof generated using the Groth16 protocol.
    Groth16(Groth16Bn254Proof),
}

/// A zero-knowledge proof generated by the PLONK protocol.
/// Contains Base64 encoded gnark PLONK proof data.
#[derive(Debug, Clone, Serialize, Deserialize, Default)]
pub struct PlonkBn254Proof {
    /// The public inputs to the proof.
    pub public_inputs: [String; 2],
    
    /// The Base64 encoded proof data.
    pub encoded_proof: String,
    
    /// The raw proof data as a string.
    pub raw_proof: String,
    
    /// The verification key hash for the PLONK protocol.
    pub plonk_vkey_hash: [u8; 32],
}

/// A zero-knowledge proof generated by the Groth16 protocol.
/// Contains Base64 encoded gnark Groth16 proof data.
#[derive(Debug, Clone, Serialize, Deserialize, Default)]
pub struct Groth16Bn254Proof {
    /// The public inputs to the proof.
    pub public_inputs: [String; 2],
    
    /// The Base64 encoded proof data.
    pub encoded_proof: String,
    
    /// The raw proof data as a string.
    pub raw_proof: String,
    
    /// The verification key hash for the Groth16 protocol.
    pub groth16_vkey_hash: [u8; 32],
}
