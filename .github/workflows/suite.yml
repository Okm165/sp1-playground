name: Testing Suite

on:
  workflow_dispatch:
    inputs:
      cpu:
        type: boolean
        required: true
        description: Run CPU tests
      cuda:
        type: boolean
        required: true
        description: Run CUDA tests
      network:
        type: boolean
        required: true
        description: Run network tests
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-x86:
    name: ${{ matrix.workload.s3_folder }} (${{ matrix.workload.mode }})
    runs-on: ${{ matrix.workload.mode == 'cuda' && fromJSON('["runs-on", "family=g6.16xlarge", "ami=ami-0a63dc9cb9e934ba3", "spot=false", "run-id=${{ github.run_id }}"]') || fromJSON('["runs-on", "runner=64cpu-linux-x64", "spot=false", "run-id=${{ github.run_id }}"]') }}
    strategy:
      matrix:
        workload:
          # CPU
          - ${{ fromJSON(github.event.inputs.cpu == 'true' && '
            [
              { "s3_folder": "fibonacci-17k", "mode": "cpu" },
              { "s3_folder": "ssz-withdrawals", "mode": "cpu" },
              { "s3_folder": "tendermint", "mode": "cpu" },
              { "s3_folder": "rsp-20526624", "mode": "cpu" },
              { "s3_folder": "regex", "mode": "cpu" },
              { "s3_folder": "chess", "mode": "cpu" },
              { "s3_folder": "rsa", "mode": "cpu" },
              { "s3_folder": "json", "mode": "cpu" },
              { "s3_folder": "chess", "mode": "cpu" },                            
              { "s3_folder": "blobstream-01j6z63fgafrc8jeh0k12gbtvw", "mode": "cpu" },
              { "s3_folder": "blobstream-01j6z95bdme9svevmfyc974bja", "mode": "cpu" }, 
              { "s3_folder": "blobstream-01j6z9ak0ke9srsppgywgke6fj", "mode": "cpu" },
              { "s3_folder": "vector-01j6xsv35re96tkgyda115320t", "mode": "cpu" },
              { "s3_folder": "vector-01j6xzy366ff5tbkzcrs8pma02", "mode": "cpu" },
              { "s3_folder": "vector-01j6y06de0fdaafemr8b1t69z3", "mode": "cpu" },
              { "s3_folder": "raiko-a7-10", "mode": "cpu" }, 
            ]
            ') || '[]' }} 
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup CI
        uses: ./.github/actions/setup
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_S3 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
          aws-region: us-west-2
      - name: Copy files from S3
        run: |
          mkdir -p workdir
          aws s3 cp s3://sp1-testing-suite/${{ matrix.workload.s3_folder }}/program.bin workdir/program.bin
          aws s3 cp s3://sp1-testing-suite/${{ matrix.workload.s3_folder }}/stdin.bin workdir/stdin.bin
      - name: Run sp1-perf
        if: ${{ (github.event.inputs.cpu == 'true' && matrix.workload.mode == 'cpu') || (github.event.inputs.cuda == 'true' && matrix.workload.mode == 'cuda') || (github.event.inputs.network == 'true' && matrix.workload.mode == 'network') }}
        uses: actions-rs/cargo@v1
        with:
          command: run
          toolchain: 1.81.0
          args: --release -p sp1-perf -- --program workdir/program.bin --stdin workdir/stdin.bin --mode ${{ matrix.workload.mode }}
        env:
          RUST_LOG: info
          RUSTFLAGS: -Copt-level=3 -Ctarget-cpu=native
          RUST_BACKTRACE: 1
          SP1_PROVER: ${{ matrix.workload.mode == 'cpu' && 'local' || matrix.workload.mode == 'cuda' && 'cuda' || matrix.workload.mode == 'network' && 'network' }}
          SP1_PRIVATE_KEY: ${{ secrets.SP1_PRIVATE_KEY }}
          PROVER_NETWORK_RPC: https://rpc-staging.succinct.xyz
